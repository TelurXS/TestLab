@{
    ViewData["Title"] = "Profile";
}
@using TestLab.Entities.Projects;
@model ProfileViewModel;

<section>
    <div class="row">
        <div class="col-lg-4">
            <div class="card mb-4 shadow">
                <div class="card-body text-center">
                    <img src="@Model.ProfileImage" alt="avatar"
                         class="rounded-circle img-fluid" style="width: 150px; height: 150px;">
                    <h5 class="my-3">@Model.Name</h5>
                    <p class="text-muted mb-1">@Model.Description</p>
                    <p class="text-muted mb-4">@Model.BirthDate.ToShortDateString()</p>
                    <div class="d-flex justify-content-center mb-2">
                        <button type="button" class="btn btn-primary m-1">Message</button>
                    </div>
                </div>
            </div>
            <div class="card mb-4 mb-lg-0 shadow">
                <div class="card-body p-0">
                    <ul class="list-group list-group-flush rounded-3">
                        <li class="list-group-item d-flex justify-content-center align-items-center p-3">
                            <p class="mb-0"><i class="bi bi-globe text-warning"></i> Projects</p>
                        </li>
                        @foreach (var project in Model.Projects.Where(x => x.Accessability is ProjectAccessability.Public))
                        {
                            <li class="list-group-item d-flex justify-content-start align-items-center p-3">
                                <a href="/project?id=@project.Id" class="text-dark">
                                    <p class="mb-0"><i class="bi bi-file-code" style="color: #3b5998;"></i> @project.Name</p>
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
        <div class="col-lg-8">
            <div class="card mb-4 shadow">
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-3"><p class="mb-0">Full Name</p></div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">@Model.Name</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3"><p class="mb-0">Description</p></div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">@Model.Description</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3"><p class="mb-0">Email</p></div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">@Model.Email</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3"><p class="mb-0">Phone</p></div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">@Model.Phone</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3"><p class="mb-0">Address</p></div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">@Model.Address</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3"> <p class="mb-0">Birth Date</p></div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">@Model.BirthDate.ToShortDateString()</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3"> <p class="mb-0">Registrated</p></div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">@Model.RegistrationDate.ToShortDateString()</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3"> <p class="mb-0">State</p></div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">@Model.State</p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="card mb-4 mb-md-0 shadow">
                        @{
                            var statsGroups = Model.Projects.GroupBy(x => x.Type);
                            float total = Model.Projects.Count();
                        }
                        <div class="card-body">
                            <p class="mb-4">
                                Projects Stats (@total)
                            </p>

                            @foreach (var group in statsGroups)
                            {
                                int value = (int)(group.Count() / total * 100);

                                <p class="mt-4 mb-1" style="font-size: .77rem;">@group.Key.ToString().SplitWithSpaces() (@group.Count()) - @value%</p>
                                <div class="progress rounded" style="height: 5px;">
                                    <div class="progress-bar" role="progressbar" style="width: @value%" aria-valuenow="@value"
                                         aria-valuemin="0" aria-valuemax="100"></div>
                                </div>

                            }
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card mb-4 mb-md-0">
                        @{
                            var statusGroups = Model.Projects.GroupBy(x => x.State);
                        }
                        <div class="card-body">
                            <p class="mb-4">
                                Projects Status (@total)
                            </p>
                            @foreach (var group in statusGroups)
                            {
                                int value = (int)(group.Count() / total * 100);

                                <p class="mt-4 mb-1" style="font-size: .77rem;">@group.Key.ToString().SplitWithSpaces() (@group.Count()) - @value%</p>
                                <div class="progress rounded" style="height: 5px;">
                                    <div class="progress-bar" role="progressbar" style="width: @value%" aria-valuenow="@value"
                                         aria-valuemin="0" aria-valuemax="100"></div>
                                </div>

                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>